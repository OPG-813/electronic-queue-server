openapi: 3.0.0
info:
  title: Electronic Queue NSUEM
  version: '1.0'
  description: An API for electronic queue system from NSUEM.
  contact:
    name: Danil
    url: 'https://github.com/DanilSord'
    email: kincharov99@gmail.com
  license:
    name: MIT
servers:
  - url: 'https://api.queue-nsuem.web-code-developers.ru'
    description: test server
tags:
  - name: User
    description: API пользователей.
  - name: Admin
    description: API администратора.
  - name: System
    description: API системы.
  - name: Purpose
    description: API целей.
  - name: Window
    description: API окон.
  - name: Worker
    description: API работников.
  - name: Field
    description: API дополнительных полей.
paths:
  /user/login:
    post:
      summary: User login
      operationId: post-user-login
      responses:
        '200':
          description: OK
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    format: uuid
                    example: 123e4567-e89b-12d3-a456-426614174000
                    description: |
                      id
                  username:
                    type: string
                    example: admin
                    description: Имя пользователя
                  role:
                    type: string
                    example: ADMIN
                    description: Роль пользователя
                required:
                  - id
                  - username
                  - role
        '400':
          $ref: '#/components/responses/Bad-Request'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      description: Аутентификация пользователя по имени пользователя и паролю.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: Имя пользователя
                  example: admin
                password:
                  type: string
                  description: Пароль
                  example: Qwerty123!
              required:
                - username
                - password
        description: Параметры тела запроса.
      x-internal: false
      tags:
        - User
    parameters: []
  /user/logout:
    get:
      summary: User logout
      tags:
        - User
      responses:
        '200':
          description: OK
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      operationId: get-user-logout
      description: Выход пользователя из учётной записи.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
          required: true
  /admin/register:
    post:
      summary: Admin register
      operationId: post-admin-register
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/Bad-Request'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      description: Регистрация администратора в системе.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: admin
                  description: Имя пользователя
                password:
                  type: string
                  example: Qwerty123!
                  description: Пароль
                name:
                  type: string
                  example: Admin
                  description: ФИО администратора
              required:
                - username
                - password
                - name
        description: Параметры тела запроса.
      tags:
        - Admin
  /admin/me:
    get:
      summary: Admin me
      tags:
        - Admin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: Id администратора
                    example: 8ce923c0-4157-487d-ab62-8cc48b0df76f
                  name:
                    type: string
                    description: ФИО администратора.
                    example: Admin
                  user:
                    type: object
                    required:
                      - id
                      - role
                      - username
                    description: Объект с данными о пользователе.
                    properties:
                      id:
                        type: string
                        description: Id пользователя.
                        example: a01bec54-0fcd-4729-aa9d-0c5043712ff5
                      role:
                        type: string
                        description: Роль пользователя.
                        example: ADMIN
                      username:
                        type: string
                        description: Имя пользователя.
                        example: admin
                  userId:
                    type: string
                    description: Id пользователя
                    example: a01bec54-0fcd-4729-aa9d-0c5043712ff5
                required:
                  - id
                  - name
                  - user
                  - userId
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      operationId: get-admin-me
      description: Получение данных об аккаунте администратора.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
          required: true
  /system/status:
    get:
      summary: System status
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 76fb63b3-1b56-4747-8f81-a9d132cd6642
                    description: id системы.
                  endDate:
                    type: string
                    example: '2100-01-01'
                    description: 'Дата, после которой система прекратит приём заявок.'
                  endTime:
                    type: string
                    example: '24:00:00'
                    description: 'Время суток, после которого система прекратит приём заявок.'
                  startDate:
                    type: string
                    example: '2000-01-01'
                    description: 'Дата, с которой система начнёт приём заявок.'
                  startTime:
                    type: string
                    example: '00:00:00'
                    description: 'Время, с которого система начнёт приём заявок.'
                  status:
                    type: string
                    enum:
                      - 'off'
                      - 'on'
                    description: Статус работы системы.
                  timezone:
                    type: string
                    example: Asia/Novosibirsk
                    description: 'Временная зона, в которой идёт отсчёт времени системы.'
                required:
                  - id
                  - endDate
                  - endTime
                  - startDate
                  - startTime
                  - status
                  - timezone
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      operationId: get-system-status
      description: Получение данных о состоянии системы.
      parameters: []
      tags:
        - System
  /purpose/add:
    post:
      summary: Purpose add
      operationId: post-purpose-add
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: b109fc37-3db3-4b34-ad2d-a3f577f54fbb
                    description: Id созданной цели.
                  name:
                    type: string
                    example: Цель1
                    description: Наименование созданной цели.
                required:
                  - id
                  - name
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Цель1
                  description: Наименование цели.
              required:
                - name
        description: Тело запроса.
      description: Добавление цели в БД.
      tags:
        - Purpose
    parameters: []
  /purpose/list:
    get:
      summary: Purpose list
      tags:
        - Purpose
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: 7378034e-0b57-4d4e-a2e8-7bcb52bbdd7c
                      description: Id цели.
                    name:
                      type: string
                      example: цель2
                      description: Наименование цели.
                  required:
                    - id
                    - name
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      operationId: get-purpose-list
      description: Получение списка целей.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
          required: true
        - schema:
            type: string
            example: '5'
          in: query
          name: itemsNumber
          description: Количество элементов на одной странице.
        - schema:
            type: string
          in: query
          name: page
          description: Порядковый номер страницы.
  /purpose/remove:
    delete:
      summary: Purpose remove
      operationId: delete-purpose-remove
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 7378034e-0b57-4d4e-a2e8-7bcb52bbdd7c
                    description: id удаленной цели.
                  name:
                    type: string
                    example: Цель 1
                    description: Наименование удалённой цели.
                required:
                  - id
                  - name
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      tags:
        - Purpose
      description: Удаление цели по id.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: 7378034e-0b57-4d4e-a2e8-7bcb52bbdd7c
                  description: id цели.
              required:
                - id
        description: Тело запроса.
  /purpose/update:
    patch:
      summary: Purpose update
      operationId: patch-purpose-update
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 7378034e-0b57-4d4e-a2e8-7bcb52bbdd7c
                    description: Id измененной цели.
                  name:
                    type: string
                    example: цель123
                    description: Наименование изменённой цели.
                required:
                  - id
                  - name
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      tags:
        - Purpose
      description: Изменение цели по id.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: 7378034e-0b57-4d4e-a2e8-7bcb52bbdd7c
                  description: Id цели.
                name:
                  type: string
                  example: цель123
                  description: Наименование цели.
              required:
                - id
        description: Тело запроса.
  /window/add:
    post:
      summary: Window add
      operationId: post-window-add
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 01d0e442-dcf5-479f-99ac-1f3c80a6c7dd
                    description: Id окна.
                  name:
                    type: string
                    example: Окно 3
                    description: Наименование окна.
                required:
                  - id
                  - name
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      tags:
        - Window
      description: Добавление нового окна.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Окно 1
                  description: Наименование окна.
              required:
                - name
        description: Тело запроса.
  /window/list:
    get:
      summary: Window list
      tags:
        - Window
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: ddbc9845-a1b1-4eaa-b9be-022c0e06b9fa
                      description: Id окна.
                    name:
                      type: string
                      example: Окно 2
                      description: Наименование окна.
                    purposes:
                      type: array
                      items:
                        type: object
                        properties:
                          id:
                            type: string
                            example: cbfe44d1-d3ea-4ced-8f9d-f346409332a5
                            description: Id цели.
                          name:
                            type: string
                            example: цель3
                            description: Наименование цели.
                        required:
                          - id
                          - name
                  required:
                    - id
                    - name
                    - purposes
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      operationId: get-window-list
      description: Получение списка окон с целями.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
          required: true
  /window/remove:
    delete:
      summary: Window remove
      operationId: delete-window-remove
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: ddbc9845-a1b1-4eaa-b9be-022c0e06b9fa
                    description: Id удаленного окна.
                  name:
                    type: string
                    example: Окно 2
                    description: НАименование удаленного окна.
                required:
                  - id
                  - name
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      tags:
        - Window
      description: Удаление окна.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: ddbc9845-a1b1-4eaa-b9be-022c0e06b9fa
                  description: Id окна.
              required:
                - id
        description: Тело запроса.
  /window/update:
    patch:
      summary: Window update
      operationId: patch-window-update
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 01d0e442-dcf5-479f-99ac-1f3c80a6c7dd
                    description: Id изменённого окна.
                  name:
                    type: string
                    example: Окно 123.
                    description: Наименование изменённого окна.
                required:
                  - id
                  - name
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      tags:
        - Window
      description: Изменения информации об окне.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: ddbc9845-a1b1-4eaa-b9be-022c0e06b9fa
                  description: Id окна.
                name:
                  type: string
                  example: Окно 123
                  description: Наименование окна.
              required:
                - id
        description: Тело запроса.
  /window/addPurposes:
    post:
      summary: Window addPurpose
      operationId: post-window-addPurposes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: 33b50b73-7886-4660-bee5-f6fe8157aa8d
                      description: id связи.
                    purposeId:
                      type: string
                      example: cbfe44d1-d3ea-4ced-8f9d-f346409332a5
                      description: id цели.
                    windowId:
                      type: string
                      example: 01d0e442-dcf5-479f-99ac-1f3c80a6c7dd
                      description: id окна.
                  required:
                    - id
                    - purposeId
                    - windowId
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      tags:
        - Window
      description: Добавление списка целей окну.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: 01d0e442-dcf5-479f-99ac-1f3c80a6c7dd
                  description: Id окна.
                purposes:
                  type: array
                  description: Список целей.
                  items:
                    type: object
                    properties:
                      id:
                        type: string
                        example: 01d0e442-dcf5-479f-99ac-1f3c80a6c7dd
                        description: Id целей.
                    required:
                      - id
              required:
                - id
                - purposes
        description: Тело запроса.
  /admin/changePassword:
    patch:
      summary: Admin changePassword
      operationId: patch-admin-changePassword
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: a01bec54-0fcd-4729-aa9d-0c5043712ff5
                    description: Id администратора.
                  role:
                    type: string
                    example: ADMIN
                    description: Роль.
                  username:
                    type: string
                    example: admin
                    description: Имя пользователя администратора.
                required:
                  - id
                  - role
                  - username
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      tags:
        - Admin
      description: Изменение пароля администратора.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oldPassword:
                  type: string
                  example: test
                  description: Старый пароль.
                newPassword:
                  type: string
                  example: test1
                  description: Новый пароль.
              required:
                - oldPassword
                - newPassword
        description: Тело запроса.
  /user/update:
    patch:
      summary: User update
      operationId: patch-user-update
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: a01bec54-0fcd-4729-aa9d-0c5043712ff5
                    description: Id пользователя.
                  username:
                    type: string
                    example: admin
                    description: Имя пользователя.
                required:
                  - id
                  - username
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      description: Изменение пользователя.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: a01bec54-0fcd-4729-aa9d-0c5043712ff5
                  description: Id пользователя.
                username:
                  type: string
                  example: admin
                  description: Имя пользователя.
              required:
                - id
        description: Тело запроса.
      tags:
        - User
  /system/getTimezones:
    get:
      summary: System getTimezones
      tags:
        - System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Asia/Tehran
                      description: Наименование временной зоны.
                    utc_offset:
                      type: object
                      properties:
                        hours:
                          type: string
                          example: '3'
                          description: Часы смещения.
                        minutes:
                          type: string
                          example: '30'
                          description: Минуты смещения.
                      required:
                        - hours
                  required:
                    - name
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      operationId: get-system-getTimezones
      description: Получение списка временных зон.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
  /window/removePurpose:
    delete:
      summary: Window removePurpose
      operationId: delete-window-removePurpose
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 073f3bbe-bbbb-4e95-b797-11b6700bd636
                    description: Id связи между окном и целью.
                  purposeId:
                    type: string
                    example: 073f3bbe-bbbb-4e95-b797-11b6700bd636
                    description: Id цели удаленной цели.
                  windowId:
                    type: string
                    example: 073f3bbe-bbbb-4e95-b797-11b6700bd636
                    description: Id окна.
                required:
                  - id
                  - purposeId
                  - windowId
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      tags:
        - Window
      description: Удаление цели у окна.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                windowId:
                  type: string
                  example: 073f3bbe-bbbb-4e95-b797-11b6700bd636
                  description: Id окна.
                purposeId:
                  type: string
                  example: 073f3bbe-bbbb-4e95-b797-11b6700bd636
                  description: Id цели.
              required:
                - windowId
                - purposeId
        description: Тело запроса.
  /worker/create:
    post:
      summary: Worker create
      operationId: post-worker-create
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 74da7556-c917-482e-86b5-ab184045bd14
                    format: uuid
                    description: Идентификатор сотрудника.
                required:
                  - id
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      tags:
        - Worker
      description: Добавление нового сотрудника.
      parameters:
        - schema:
            type: string
          in: cookie
          description: Сессионный токен пользователя.
          required: true
          name: token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                worker:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                      example: name
                      description: Имя сотрудника.
                credentials:
                  type: object
                  required:
                    - username
                    - password
                  properties:
                    username:
                      type: string
                      example: username
                      description: Имя пользователя.
                    password:
                      type: string
                      example: password
                      description: Пароль сотрудника.
              required:
                - worker
                - credentials
        description: Тело запроса.
  /worker/get:
    get:
      summary: Worker get
      tags:
        - Worker
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 74da7556-c917-482e-86b5-ab184045bd14
                    format: uuid
                    description: Идентификатор сотрудника.
                  name:
                    type: string
                    example: Worker5
                    description: Имя сотрудника.
                  statusId:
                    type: string
                    format: uuid
                    example: e6c4f69d-f964-49b7-84a2-b3973cd236d8
                    description: Идентификатор статуса сотрудника.
                  userId:
                    type: string
                    format: uuid
                    example: 90eeed0b-2a0d-4939-8557-f22f041d9c9d
                    description: Идентификатор пользователя.
                  windowId:
                    type: string
                    format: uuid
                    example: 90eeed0b-2a0d-4939-8557-f22f041d9c9d
                    description: 'Идентификатор окна, за которым работает сотрудник.'
                required:
                  - id
                  - name
                  - statusId
                  - userId
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      operationId: get-worker-get
      parameters:
        - schema:
            type: string
          in: cookie
          description: Сессионный токен пользователя.
          required: true
          name: token
        - schema:
            type: string
            format: uuid
            example: 74da7556-c917-482e-86b5-ab184045bd14
          in: query
          name: id
          required: true
          description: Идентификатор пользователя.
      description: Получение сотрудника.
  /worker/list:
    get:
      summary: Worker list
      tags:
        - Worker
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: 988bf769-eda9-4950-82ac-92a3cb76edb1
                      format: uuid
                      description: Идентификатор сотрудника.
                    name:
                      type: string
                      example: Worker2
                      description: Имя сотрудника.
                    statusId:
                      type: string
                      example: e6c4f69d-f964-49b7-84a2-b3973cd236d8
                      format: uuid
                      description: Идентификатор статуса сотрудника.
                    userId:
                      type: string
                      example: a89c77f9-ac92-4531-a013-90ca5ab2be6d
                      format: uuid
                      description: Идентификатор пользователя.
                    windowId:
                      type: string
                      example: a89c77f9-ac92-4531-a013-90ca5ab2be6d
                      format: uuid
                      description: 'Идентификатор окна, за которым работает сотрудник.'
                  required:
                    - id
                    - name
                    - statusId
                    - userId
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      operationId: get-worker-list
      parameters:
        - schema:
            type: string
          in: cookie
          description: Сессионный токен пользователя.
          required: true
          name: token
        - schema:
            type: string
            format: uuid
            example: 74da7556-c917-482e-86b5-ab184045bd14
          in: query
          name: statusId
          description: Фильтр. Идентификатор статуса пользователя.
        - schema:
            type: string
            format: uuid
            example: 74da7556-c917-482e-86b5-ab184045bd14
          in: query
          name: windowId
          description: Фильтр. Идентификатор окна.
        - schema:
            type: string
            example: '2'
          in: query
          name: itemsNumber
          description: Количество объектов на странице.
        - schema:
            type: string
            example: '1'
          in: query
          name: page
          description: Порядковый номер страницы.
      description: Получение списка сотрудников.
  /worker/getPeriodStats:
    get:
      summary: Worker getPeriodStats
      tags:
        - Worker
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  averageTicketServiceTime:
                    type: number
                    example: 0
                    description: Среднее время обработки талона.
                  ticketsNumber:
                    type: number
                    example: 0
                    description: Количество талонов.
                required:
                  - averageTicketServiceTime
                  - ticketsNumber
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      operationId: get-worker-getPeriodStats
      parameters:
        - schema:
            type: string
          in: cookie
          description: Сессионный токен пользователя.
          required: true
          name: token
        - schema:
            type: string
            example: '2021-01-20'
          in: query
          name: startDate
          required: true
          description: Начальная дата.
        - schema:
            type: string
            example: '2021-01-22'
          in: query
          name: endDate
          required: true
          description: Конечная дата.
      description: Получение статистики сотрудника за определённый период времени.
  /worker/getStatus:
    get:
      summary: Worker getStatus
      tags:
        - Worker
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: e6c4f69d-f964-49b7-84a2-b3973cd236d8
                    format: uuid
                    description: Идентификатор статуса.
                  name:
                    type: string
                    example: not work
                    description: Название статуса.
                required:
                  - id
                  - name
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      operationId: get-worker-getStatus
      parameters:
        - schema:
            type: string
          in: cookie
          description: Сессионный токен пользователя.
          required: true
          name: token
        - schema:
            type: string
            format: uuid
            example: 74da7556-c917-482e-86b5-ab184045bd14
          in: query
          name: id
          required: true
          description: Идентификатор статуса сотрудника.
      description: Получение названия статуса сотрудника.
  /worker/remove:
    delete:
      summary: Worker remove
      operationId: delete-worker-remove
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 988bf769-eda9-4950-82ac-92a3cb76edb1
                    format: uuid
                    description: Идентификатор сотрудника.
                  userId:
                    type: string
                    example: a89c77f9-ac92-4531-a013-90ca5ab2be6d
                    format: uuid
                    description: Идентификатор пользователя.
                required:
                  - id
                  - userId
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      tags:
        - Worker
      parameters:
        - schema:
            type: string
          in: cookie
          description: Сессионный токен пользователя.
          required: true
          name: token
      description: Удаление сотрудника.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  description: Идентификатор сотрудника.
                  example: 74da7556-c917-482e-86b5-ab184045bd14
              required:
                - id
        description: Тело запроса.
  /worker/update:
    patch:
      summary: Worker update
      operationId: patch-worker-update
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: 7d870e0e-6ca4-4bb0-af89-5b32b81e5297
                      format: uuid
                  required:
                    - id
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      tags:
        - Worker
      parameters:
        - schema:
            type: string
          in: cookie
          description: Сессионный токен пользователя.
          required: true
          name: token
      description: Изменение данных сотрудника.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  format: uuid
                  description: Идентификатор сотрудника.
                  example: 74da7556-c917-482e-86b5-ab184045bd14
                updates:
                  type: object
                  description: Объект с изменениями.
                  properties:
                    worker:
                      type: object
                      description: Объект с данными сотрудника.
                      properties:
                        name:
                          type: string
                          example: name
                          description: Имя сотрудника.
                    credentials:
                      type: object
                      description: Объект с данными авторизации.
                      properties:
                        username:
                          type: string
                          example: username
                          description: Имя пользователя.
                        password:
                          type: string
                          example: password
                          description: Пароль.
              required:
                - id
                - updates
        description: Тело запроса.
  /system/getCurrentStats:
    get:
      summary: Sytem getCurrentStats
      tags:
        - System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  activeWindowNumber:
                    type: number
                    example: 0
                    description: Количество работающих окон.
                  activeWorkersNumber:
                    type: number
                    example: 0
                    description: Количество работающих сотрудников.
                  waitingTickets:
                    type: number
                    example: 0
                    description: Количество ожидающих в очереди заявок.
                required:
                  - activeWindowNumber
                  - activeWorkersNumber
                  - waitingTickets
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      operationId: get-system-getCurrentStats
      description: Получение общей статистики на текущий момент.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
          required: true
  /system/getPeriodStats:
    get:
      summary: System getPeriodStats
      tags:
        - System
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  averageTicketServiceTime:
                    type: number
                    example: 0
                    description: Среднее время обработки заявки.
                  averageTicketWaitingTime:
                    type: number
                    example: 0
                    description: Среднее время ожидания заявки в очереди.
                  ticketsNumber:
                    type: number
                    example: 0
                    description: Общее количество обработанных заявок.
                required:
                  - averageTicketServiceTime
                  - averageTicketWaitingTime
                  - ticketsNumber
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      operationId: get-system-getPeriodStats
      description: Получение общей статистики за период времени.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
          required: true
        - schema:
            type: string
            example: '2021-01-20'
          in: query
          name: startDate
          description: Начальная дата.
          required: true
        - schema:
            type: string
            example: '2021-01-20'
          in: query
          name: endDate
          description: Конечная дата.
          required: true
  /field/create:
    post:
      summary: Field create
      operationId: post-field-create
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 7d870e0e-6ca4-4bb0-af89-5b32b81e5297
                    format: uuid
                    description: Идентификатор поля.
                required:
                  - id
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      tags:
        - Field
      description: Создание дополнительного поля.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                purposeId:
                  type: string
                  example: 74da7556-c917-482e-86b5-ab184045bd14
                  format: uuid
                  description: 'Идентификатор цели, к которой добавляется поле.'
                fieldTypeId:
                  type: string
                  example: 74da7556-c917-482e-86b5-ab184045bd14
                  format: uuid
                  description: Идентификатор типа поля.
                name:
                  type: string
                  example: name
                  description: Наименование поля.
              required:
                - purposeId
                - fieldTypeId
                - name
        description: Тело запроса.
  /field/get:
    get:
      summary: Field get
      tags:
        - Field
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: ac184494-d143-4033-8260-e2dbe266925b
                    format: uuid
                    description: Идентификатор поля.
                  fieldTypeId:
                    type: string
                    example: ac184494-d143-4033-8260-e2dbe266925b
                    format: uuid
                    description: Идентификатор типа поля.
                  name:
                    type: string
                    example: ФИО
                    description: Наименование поля.
                  purposeId:
                    type: string
                    format: uuid
                    example: 9baa9c0c-374e-4633-96c1-e5214a599ead
                    description: 'Идентификатор цели, за которой закреплено поле.'
                required:
                  - id
                  - fieldTypeId
                  - name
                  - purposeId
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      operationId: get-field-get
      description: Получение дополнительного поля.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
          required: true
        - schema:
            type: string
            example: 74da7556-c917-482e-86b5-ab184045bd14
            format: uuid
          in: query
          name: id
          required: true
          description: Идентификатор поля.
  /field/list:
    get:
      summary: Field list
      tags:
        - Field
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: 978307cb-fd94-41de-a3f7-8e0d777dd97b
                      format: uuid
                      description: Идентификатор поля.
                    fieldTypeId:
                      type: string
                      example: 978307cb-fd94-41de-a3f7-8e0d777dd97b
                      format: uuid
                      description: Идентификатор типа поля.
                    name:
                      type: string
                      example: Номер телефона
                      description: Наименование поля.
                    purposeId:
                      type: string
                      example: 9baa9c0c-374e-4633-96c1-e5214a599ead
                      format: uuid
                      description: 'Идентификатор цели, за которой закреплено поле.'
                  required:
                    - id
                    - fieldTypeId
                    - name
                    - purposeId
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          description: Internal Server Error
      operationId: get-field-list
      description: Получение списка дополнительных полей.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
          required: true
        - schema:
            type: string
            example: 74da7556-c917-482e-86b5-ab184045bd14
            format: uuid
          in: query
          name: purposeId
          description: Фильтр. Идентификатор цели.
        - schema:
            type: string
            example: 74da7556-c917-482e-86b5-ab184045bd14
            format: uuid
          in: query
          name: fieldTypeId
          description: Фильтр. Идентификатор типа поля.
        - schema:
            type: string
            example: '2'
          in: query
          name: itemsNumber
          description: Количество объектов на странице.
        - schema:
            type: string
            example: '1'
          in: query
          name: page
          description: Номер страницы.
  /field/getType:
    get:
      summary: Field getType
      tags:
        - Field
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: ac184494-d143-4033-8260-e2dbe266925b
                    format: uuid
                    description: Идентификатор  типа поля.
                  name:
                    type: string
                    example: number
                    description: Наименование типа поля.
                required:
                  - id
                  - name
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      operationId: get-field-getType
      description: Получение типа дополнительного поля.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
          required: true
        - schema:
            type: string
            example: 74da7556-c917-482e-86b5-ab184045bd14
            format: uuid
          in: query
          name: id
          required: true
          description: Идентификатор типа поля.
  /field/listType:
    get:
      summary: Field listType
      tags:
        - Field
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: ac184494-d143-4033-8260-e2dbe266925b
                      format: uuid
                      description: Идентификатор типа поля.
                    name:
                      type: string
                      example: number
                      description: Наименование типа поля.
                  required:
                    - id
                    - name
        '400':
          description: Bad Request
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      operationId: get-field-listType
      description: Получение списка доступных типов дополнительных полей.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
          required: true
        - schema:
            type: string
            example: '2'
          in: query
          name: itemsNumber
          description: Количество объектов на странице.
        - schema:
            type: string
            example: '1'
          in: query
          name: page
          description: Номер страницы.
  /field/remove:
    delete:
      summary: Field remove
      operationId: delete-field-remove
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    example: 978307cb-fd94-41de-a3f7-8e0d777dd97b
                    format: uuid
                    description: Идентификатор поля.
                required:
                  - id
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      tags:
        - Field
      description: Удаление дополнительного поля.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: 74da7556-c917-482e-86b5-ab184045bd14
                  format: uuid
                  description: Идентификатор поля.
              required:
                - id
        description: Тело запроса.
  /field/update:
    patch:
      summary: Field update
      operationId: patch-field-update
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                      example: 7d870e0e-6ca4-4bb0-af89-5b32b81e5297
                      format: uuid
                      description: Идентификатор поля.
                  required:
                    - id
        '400':
          $ref: '#/components/responses/Bad-Request'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Internal-Server-Error'
      tags:
        - Field
      description: Изменение дополнительного поля.
      parameters:
        - schema:
            type: string
          in: cookie
          name: token
          description: Сессионный токен пользователя.
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: 74da7556-c917-482e-86b5-ab184045bd14
                  format: uuid
                  description: Идентификатор поля.
                updates:
                  type: object
                  description: Объект с изменениями.
                  properties:
                    name:
                      type: string
                      example: name
                      description: Наименование поля.
                    fieldTypeId:
                      type: string
                      example: 74da7556-c917-482e-86b5-ab184045bd14
                      description: Идентификатор типа поля.
              required:
                - id
                - updates
        description: Тело запроса.
components:
  schemas:
    SystemUser:
      title: SystemUser
      type: object
      description: Пользователь системы.
      properties:
        id:
          type: string
          description: Id пользователя в формате uuid.
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        role:
          type: string
          description: Роль пользователя
          example: ADMIN
        username:
          type: string
          description: Имя пользователя
          example: admin
        password:
          type: string
          description: Пароль
          example: Qwerty123!
      required:
        - id
        - role
        - username
        - password
    AdminUser:
      title: AdminUser
      type: object
      description: Администратор системы. Может быть только один.
      properties:
        id:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
          description: Id в формате uuid
        userId:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
          description: id связанного пользователя
        name:
          type: string
          example: Админ Такой То
          description: ФИО администратора
      required:
        - id
        - userId
        - name
    SystemStatus:
      title: SystemStatus
      type: object
      description: Модель статуса работы системы и её настроек.
      properties:
        id:
          type: string
          format: uuid
          description: Id статуса системы. Больше одного статуса не может быть.
          example: 7378034e-0b57-4d4e-a2e8-7bcb52bbdd7c
        status:
          type: string
          enum:
            - 'on'
            - 'off'
          description: Значение статуса системы.
        startDate:
          type: string
          format: date
          example: '2000-01-01'
          description: Дата начала работы системы.
        endDate:
          type: string
          format: date
          example: '2100-01-01'
          description: Дата окончания работы системы.
        startTime:
          type: string
          format: time
          example: '00:00:00'
          description: Время суток начала работы системы.
        endTime:
          type: string
          format: time
          example: '23:00:00'
          description: Время суток окончания работы системы.
        timezone:
          type: string
          example: Asia/Novosibirsk
          description: Часовой пояс работы системы.
      required:
        - id
        - status
        - startDate
        - endDate
        - startTime
        - endTime
        - timezone
    Purpose:
      title: Purpose
      type: object
      description: Модель цели посещения.
      properties:
        id:
          type: string
          format: uuid
          description: Id цели.
          example: 7378034e-0b57-4d4e-a2e8-7bcb52bbdd7c
        name:
          type: string
          example: цель1
          description: Наименование цели.
      required:
        - id
        - name
    SystemWindow:
      title: SystemWindow
      type: object
      description: Окно.
      properties:
        id:
          type: string
          description: id окна.
          format: uuid
        name:
          type: string
          description: НАименование окна.
          example: Окно 1
      required:
        - id
        - name
    WorkerStatus:
      title: WorkerStatus
      type: object
      description: Статус работника.
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
          description: Идентификатор статуса.
        name:
          type: string
          example: not work
          description: Наименование статуса.
      required:
        - id
        - name
    TicketStatus:
      title: TicketStatus
      type: object
      description: Статус талона.
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
          description: Идентификатор статуса талона.
        name:
          type: string
          example: wait
          description: Наименование статуса талона.
      required:
        - id
        - name
    FieldType:
      title: FieldType
      type: object
      description: Тип поля.
      properties:
        id:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
          format: uuid
          description: Идентификатор типа поля.
        name:
          type: string
          example: number
          description: НАименование типа поля.
      required:
        - id
        - name
    Worker:
      title: Worker
      type: object
      description: Сотрудник.
      properties:
        id:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
          format: uuid
          description: Идентификатор сотрудника.
        userId:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
          description: Идентификатор пользователя.
        statusId:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
          description: Идентификатор статуса пользователя.
        windowId:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
          format: uuid
          description: 'Идентификатор окна, в котором работает сотрудник.'
        name:
          type: string
          example: Worker 1
          description: Имя сотрудника.
      required:
        - id
        - userId
        - statusId
        - name
    Ticket:
      title: Ticket
      type: object
      description: Талон
      properties:
        id:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
          format: uuid
          description: Идентификатор талона.
        workerId:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
          format: uuid
          description: Идентификатор сотрудника.
        statusId:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
          description: Идентификатор статуса талона.
        purposeId:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
          description: Идентификатор цели.
        codePrefix:
          type: string
          example: Т
          description: Префикс цели.
        codeNumber:
          type: string
          example: '12'
          description: Порядковый номер для префикса цели.
        serviceTime:
          type: string
          example: '00:00:00'
          description: Время обслуживания талона.
        startServiceTime:
          type: string
          example: '00:00:00'
          description: Время начала обслуживания.
        issuanceTime:
          type: string
          example: '00:00:00'
          description: Время выдачи талона.
        waitingTime:
          type: string
          example: '00:00:00'
          description: Время ожидания талона в очереди.
      required:
        - id
        - workerId
        - statusId
        - purposeId
        - codePrefix
        - codeNumber
        - issuanceTime
    AdditionalField:
      title: AdditionalField
      type: object
      description: Дополнительное поле.
      properties:
        id:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
          format: uuid
          description: Идентификатор поля.
        purposeId:
          type: string
          example: 123e4567-e89b-12d3-a456-426614174000
          format: uuid
          description: Идентификатор цели.
        fieldTypeId:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
          description: Идентификатор типа поля.
        name:
          type: string
          example: number
          description: Наименование поля.
      required:
        - id
        - purposeId
        - fieldTypeId
        - name
  responses:
    Bad-Request:
      description: Bad request!
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: Сообщение об ошибке
                example: Bad request!
              httpCode:
                type: number
                description: HTTP код ошибки
                example: 400
              data:
                type: object
                description: Объект с дополнительной информацией
            required:
              - message
              - httpCode
          examples: {}
      headers: {}
    Conflict:
      description: Data conflict error!
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                description: Сообщение об ошибке
                example: Data conflict error!
              httpCode:
                type: number
                description: HTTP код ошибки
                example: 409
              data:
                type: object
                description: Объект с дополнительной информацией
            required:
              - message
              - httpCode
              - data
    Internal-Server-Error:
      description: Internal server error!
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: ' Internal server error!'
                description: Сообщение об ошибке.
              httpCode:
                type: number
                example: 500
                description: HTTP код ошибки
              data:
                type: object
                description: Объект с дополнительной информацией. Отсутствует.
            required:
              - message
              - httpCode
    Unauthorized:
      description: Not uthorized!
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Not uthorized!
                description: Сообщение об ошибке
              httpCode:
                type: string
                example: '401'
                description: HTTP код ошибки
              data:
                type: object
                description: Объект с дополнительной информацией
            required:
              - message
              - httpCode
    Forbidden:
      description: Not enough rights!
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: Not enough rights!
                description: Сообщение об ошибке.
              httpCode:
                type: string
                description: HTTP код ошибки
                example: '403'
              data:
                type: object
                description: Объект с дополнительной информацией.
            required:
              - message
              - httpCode
  securitySchemes: {}
security: []
